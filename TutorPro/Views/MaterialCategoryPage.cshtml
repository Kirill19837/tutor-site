@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.MaterialCategoryPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "Main.cshtml";
    var mainMaterialPage = Model.Parent.Parent as MaterialPage;
    var LanguagePage = Model.Parent as MaterialCategoryPage;
}
@if (mainMaterialPage != null)
{
    <section class="inner-top matirials-top radial-bg">
        <div class="container">
            @if (mainMaterialPage.TInnerTop != null && mainMaterialPage.TInnerTop.FirstOrDefault().Content is TInnerPageTop innerTop && innerTop.TDecors != null)
            {
                @foreach (var decor in innerTop.TDecors)
                {
                    @await Html.PartialAsync("tutorPartials/TDecorItem", decor.Content)
                }
            }
            <div class="material_preview"> 
                @if(Model.TPreview != null && Model.TPreview.Any())
                {
                    @await Html.GetBlockGridHtmlAsync(Model.TPreview)                    
                }
                else
                {
                    @await Html.GetBlockGridHtmlAsync(LanguagePage.TPreview)
                }             
            </div>
        </div>
    </section>
    @if (mainMaterialPage.TMaterialFilters != null)
    {       
        <div id="materials_filter" data-language="@LanguagePage.TTag" data-pageId="@Model.Id">
            <script>
                var subjects = @Html.Raw(Json.Serialize(Model.TTag));
            </script>
            @await Html.GetBlockGridHtmlAsync(mainMaterialPage.TMaterialFilters);
        </div>

    }
    @if (mainMaterialPage.TAction != null)
    {
        @await Html.GetBlockGridHtmlAsync(mainMaterialPage.TAction);
    }
}

