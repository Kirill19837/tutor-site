@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.BlogArticle>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "Main.cshtml";
    var blogPage = Model.Parent as BlogPage;
}

<!-- Section "Inner page top" -->
<section class="inner-top blog-top radial-bg">
    <div class="container">
        @if (Model.TDecors != null)
        {
            @foreach (var decor in Model.TDecors)
            {
                @await Html.PartialAsync("tutorPartials/TDecorItem", decor.Content)
            }
        }
        <div class="inner-top__content">
            <h1 class="inner-top__title big-title">@(blogPage != null ? blogPage.TTitle : Model.TTitle)</h1>
        </div>
    </div>
</section>

<!-- Section "Blog" -->
<div class="article">
    <div class="container">
        @if (Model.TBreadcrumbs)
        {
            <!-- Breadcrumbs -->
            <div class="article__breadcrumbs breadcrumbs">
                <ul class="breadcrumbs__list">
                    <li class="breadcrumbs__list-item">
                        <a class="breadcrumbs__list-link" href="@Model.Parent.Url()">@Model.Parent.Name.Split(" ")[0]</a>
                    </li>
                    <li class="breadcrumbs__list-item">
                        <a class="breadcrumbs__list-link" href="#">@Model.TTitle</a>
                    </li>
                </ul>
            </div>
        }      

        <!-- Article content -->
        <div class="article__content">           
            @if(Model.TImage != null)
            {
                <img src="@Model.TImage.Url()" alt="Article image">
            }
            
            <h1>@Model.TTitle</h1>
            @if(Model.TContent != null)
            {
                @await Html.GetBlockGridItemsHtmlAsync(Model.TContent)
            }
            
            <span>@Model.TPublicDate.ToString("MMMM d, yyyy")</span>
        </div>
    </div>
</div>
@if(Model.TRequestForm != null)
{
    @await Html.GetBlockGridItemsHtmlAsync(Model.TRequestForm)   
}
