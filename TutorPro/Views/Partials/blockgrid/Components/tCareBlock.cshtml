@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@{
    var content = (TCareBlock)Model.Content;
}

<div class="care_container">
    <div class="care_bg"></div>
    <div class="container">
        @if(content.TCards != null && content.TCards.Any() && content.TCards.Count >= 2)
        {
            <div class="care_content">
                <div class="care_card care_card_right">
                    @{
                        var firstCard = content.TCards.First().Content as TCard;
                        var firstImage = firstCard.TImage.FirstOrDefault().Content as TBlockImage;
                    }
                    @if(firstCard != null)
                    {   <div class="care_card-text-content">
                            <h1 class="care_card_right-title big-title">@firstCard.TTitle</h1>
                            <div class="care_card-text">
                                @Html.Raw(firstCard.TText)
                            </div>
                            @if (firstCard.TButton != null && !string.IsNullOrEmpty(firstCard.TButton.Content.TButtonTitle))
                            {
                                @await Html.PartialAsync("tutorPartials/TButton", firstCard.TButton.Content, new ViewDataDictionary(ViewData) { { "class", "care_card_link" }, { "span", false } })
                            }
                        </div>
                        @if(firstImage != null && firstImage.TImage != null)
                        {
                            <div class="care_card-image">
                                <img src="@firstImage.TImage.Url()" />
                            </div>
                        }
                        
                    }                   
                </div>
                <div class="care_card care_card_left">
                     @{
                        var secondCard = content.TCards.Skip(1).First().Content as TCard;
                        var secondImage = secondCard.TImage.FirstOrDefault().Content as TBlockImage;
                    }
                    @if(secondCard != null)
                    {
                        @if (secondImage != null && secondImage.TImage != null)
                        {
                            <div class="care_card-image">
                                <img src="@secondImage.TImage.Url()" />
                            </div>
                        }
                        <div class="care_card-text-content">
                            <h1 class="care_card_left-title big-title">@secondCard.TTitle</h1>
                            <div class="care_card-text">
                                @Html.Raw(secondCard.TText)
                            </div>
                            @if (secondCard.TButton != null && !string.IsNullOrEmpty(secondCard.TButton.Content.TButtonTitle))
                            {
                                @await Html.PartialAsync("tutorPartials/TButton", secondCard.TButton.Content, new ViewDataDictionary(ViewData) { { "class", "care_card_link" }, { "span", false } })
                            }
                        </div>
                        
                    }
                </div>
            </div>
        }      
    </div>
</div>

<style>
    
</style>